"Name" = 'Graphviz'
"Version" = 'Based on dot Users Manual - 4 Feb 2002'
"Author" = 'Richard Schneider <richard@blackhen.co.nz>'
"About" = 'A graph language from AT&T, it is known by the names graphviz and dot.'

! The following is a sample file:
!
!            digraph G1
!            {
!              label = "Document flow"
!              node [shape = document, width = 1]
!              a [color = red];
!              a -> b [arrowtail = obox]
!              c -> d [arrowtail = obox];" + Environment.NewLine +
!              x [fillcolor = green] -> y -> z [color = blue]
!            }
!
! To add a double quote into a string, escape it with the backslash, e.g.
!   "A \"quoted\" string"
{String Char} = {Printable} - ["\]
! An ID is any alphanumeric string not beginning with a digit; but
! possibly including underscores.
! OR a number
! OR a quoted string possibly containing escaped quotes

{Symbol Head}    = {Letter} + [_]
{Symbol Tail}    = {Symbol Head} + {Digit}

id = ({Symbol Head} {Symbol Tail}*) | {Digit}+ | {Digit}*.{Digit}+ | '"' ( {String Char} | '\' '"' )* '"'
edgeop = ('->' | '--')

! Standard C++ style comments
Comment Line = '//'
Comment Start = '/*'
Comment End = '*/'

"Case Sensitive" = 'True'
"Start Symbol" = <graph>

<graph> ::= <strict> <graph type> id '{' <stmt list> '}'
<strict> ::= strict |
<graph type> ::= digraph | graph
<stmt list> ::= <stmt> <stmt list> | <stmt> ';' <stmt list> |
<stmt> ::= <attr stmt> | <node stmt> | <edge stmt> | <subgraph stmt> | <attr assignment>
<attr stmt> ::= graph <attr list> | node <attr list> | edge <attr list>
<attr list> ::= '[' <a list> ']' | '[' ']'
<a list> ::= <attr assignment> | <attr assignment> ',' <a list> | <attr assignment>  <a list>
<attr assignment> ::= id '=' id 
 
<node stmt> ::= <node id> | <node id> <attr list>
<node id> ::= id | id <port>
<port> ::= <port location> | <port angle> | <port location> <port angle> | <port angle> <port location>
<port location> ::= ':' id | ':' id '(' id ',' id ')'
<port angle> ::= '@' id
<edge stmt> ::= <node id> <edgeRHS> | <node id> <edgeRHS> <attr list> | <subgraph> <edgeRHS> | <subgraph> <edgeRHS> <attr list> 
<edgeRHS> ::=     edgeop <node id> | edgeop <node id> <edgeRHS>
               
<subgraph stmt> ::= subgraph id '{' <stmt list> '}' | '{' <stmt list> '}' | subgraph id ';' 
<subgraph> ::= subgraph id | '{' <stmt list> '}' | subgraph id '{' <stmt list> '}'  
